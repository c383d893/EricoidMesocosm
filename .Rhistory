library(tidyverse)
library(ggplot2)
meso_bad <- c(44,55,56,63,147,153,166,245,265,473)
div <- read.csv("data/Ericoid_mesocosm_combinations.csv") %>%
select(meso_num, p_level, f_level,f_comb)
dat <- read.table("data/ERM_dataclean_April42025.txt", header = TRUE) %>%
filter(!meso_num %in% meso_bad) %>%
mutate(dead = case_when(dead_all == "dead" ~ "dead",
dead_all == "dead;no_leaves" ~ "dead",
dead_all == "no_plant" ~ "no_plant",
dead_all == "sick" ~ "sick",
dead_all == "sick;shoot_broke" ~ "sick")) %>%
mutate(dead = ifelse(is.na(dead), "alive", dead)) %>%
select(-dead_all) %>%
#add small value to not detected
mutate(above_biomass_g = ifelse(above_biomass_g == "not_detected", 0.0001, above_biomass_g)) %>%
filter(!dead == "dead") %>%
filter(!dead == "no_plant") %>%
left_join(div, by = "meso_num") %>%
mutate(p_level = as.character(p_level), f_level = as.character(f_level), above_biomass_g = as.numeric(above_biomass_g),  belowBEF_biomass_g = as.numeric(belowBEF_biomass_g)) %>%
mutate(last_digit = meso_num %% 10,
block = case_when(
last_digit %in% c(1, 6) ~ 1,
last_digit %in% c(2, 7) ~ 2,
last_digit %in% c(3, 8) ~ 3,
last_digit %in% c(4, 9) ~ 4,
last_digit %in% c(5, 0) ~ 5)) %>%
select(-last_digit)
dat.all <- read.table("data/ERM_dataclean_April42025.txt", header = TRUE) %>%
filter(!meso_num %in% meso_bad) %>%
mutate(dead = case_when(dead_all == "dead" ~ "dead",
dead_all == "dead;no_leaves" ~ "dead",
dead_all == "no_plant" ~ "no_plant",
dead_all == "sick" ~ "sick",
dead_all == "sick;shoot_broke" ~ "sick")) %>%
mutate(dead = ifelse(is.na(dead), "alive", dead)) %>%
select(-dead_all) %>%
#add small value to not detected
mutate(above_biomass_g = ifelse(above_biomass_g == "not_detected", 0.0001, above_biomass_g)) %>%
#filter(!dead == "dead") %>%
filter(!dead == "no_plant") %>%
left_join(div, by = "meso_num") %>%
mutate(p_level = as.character(p_level), f_level = as.character(f_level), above_biomass_g = as.numeric(above_biomass_g),  belowBEF_biomass_g = as.numeric(belowBEF_biomass_g)) %>%
mutate(last_digit = meso_num %% 10,
block = case_when(
last_digit %in% c(1, 6) ~ 1,
last_digit %in% c(2, 7) ~ 2,
last_digit %in% c(3, 8) ~ 3,
last_digit %in% c(4, 9) ~ 4,
last_digit %in% c(5, 0) ~ 5)) %>%
select(-last_digit)
saveRDS(dat, "data/ERM_data_abovegroundind.rds")
saveRDS(dat.all, "data/ERM_data_abovegroundind_all.rds")
# dat a
dat.a <- dat %>%
select(-belowBEF_biomass_g) %>%
drop_na(-f_comb)
# ind num per meso
dat.indpermeso <- dat %>%
group_by(meso_num) %>%
summarise(ind_num = n())
#mesocosm level data
meso.a <- dat.a %>%
group_by(meso_num) %>%
summarise(aboveBEF_biomass_g = sum(above_biomass_g))
dat.meso.a <- meso.a %>%
left_join(dat.a, by = "meso_num") %>%
select(meso_num, aboveBEF_biomass_g, p_level, f_level, block) %>%
distinct(meso_num, .keep_all = TRUE) %>%
left_join(dat.indpermeso, by = "meso_num")
dat.meso.b <- dat %>%
select(meso_num, belowBEF_biomass_g, p_level, f_level, block) %>%
drop_na() %>%
distinct(meso_num, .keep_all = TRUE) %>%
left_join(dat.indpermeso, by = "meso_num")
saveRDS(dat.meso.a, "data/ERM_data_abovegroundmeso.rds")
saveRDS(dat.meso.b, "data/ERM_data_belowgroundmeso.rds")
# Summarize means and standard errors
summary_df <- dat.a %>%
group_by(p_level, f_level) %>%
summarise(
mean_biomass = mean(above_biomass_g),
se = sd(above_biomass_g) / sqrt(n())
)
plot <- ggplot() +
geom_jitter(data = dat.a,
aes(x = p_level, y = above_biomass_g, color = f_level),
width = 0.2, alpha = 0.3, size = 1) +
geom_point(data = summary_df,
aes(x = p_level, y = mean_biomass, color = f_level),
position = position_dodge(0.2), size = 2) +
geom_errorbar(data = summary_df,
aes(x = p_level, ymin = mean_biomass - se, ymax = mean_biomass + se, color = f_level),
width = 0.2,
position = position_dodge(0.2)) +
scale_color_brewer(palette = "Dark2") +
labs(y = "Aboveground Biomass (g)", x = "Plant diversity", color = "Fungal diversity") +
theme_minimal() +
ylim(0, 0.015)  +
facet_grid(~f_level)
png("figures/ERM_aboveground_ind_data.jpg", width = 10, height = 10, units = 'in', res = 300)
plot
dev.off()
# Summarize means and standard errors
summary_df <- dat.meso.a %>%
group_by(p_level, f_level) %>%
summarise(
mean_biomass = mean(aboveBEF_biomass_g),
se = sd(aboveBEF_biomass_g) / sqrt(n())
)
plot <-
ggplot() +
geom_jitter(data = dat.meso.a,
aes(x = p_level, y = aboveBEF_biomass_g, color = f_level),
width = 0.2, alpha = 0.3, size = 1) +
geom_point(data = summary_df,
aes(x = p_level, y = mean_biomass, color = f_level),
position = position_dodge(0.2), size = 2) +
geom_errorbar(data = summary_df,
aes(x = p_level, ymin = mean_biomass - se, ymax = mean_biomass + se, color = f_level),
width = 0.2,
position = position_dodge(0.2)) +
scale_color_brewer(palette = "Dark2") +
labs(y = "Aboveground Biomass (g)", x = "Plant diversity", color = "Fungal diversity") +
theme_minimal() +
ylim(0, 0.20)  +
facet_grid(~f_level)
png("figures/ERM_aboveground_mesocosm_data.jpg", width = 10, height = 10, units = 'in', res = 300)
plot
dev.off()
# Summarize means and standard errors
summary_df <- dat.meso.b %>%
group_by(p_level, f_level) %>%
summarise(
mean_biomass = mean(belowBEF_biomass_g),
se = sd(belowBEF_biomass_g) / sqrt(n())
)
plot <-
ggplot() +
geom_jitter(data = dat.meso.b,
aes(x = p_level, y = belowBEF_biomass_g, color = f_level),
width = 0.2, alpha = 0.3, size = 1) +
geom_point(data = summary_df,
aes(x = p_level, y = mean_biomass, color = f_level),
position = position_dodge(0.2), size = 2) +
geom_errorbar(data = summary_df,
aes(x = p_level, ymin = mean_biomass - se, ymax = mean_biomass + se, color = f_level),
width = 0.2,
position = position_dodge(0.2)) +
scale_color_brewer(palette = "Dark2") +
labs(y = "Belowground Biomass (g)", x = "Plant diversity", color = "Fungal diversity") +
theme_minimal() +
ylim(0, 0.20)  +
facet_grid(~f_level)
png("figures/ERM_belowground_mesocosm_data.jpg", width = 10, height = 10, units = 'in', res = 300)
plot
dev.off()
library(tidyverse)
library(ggplot2)
library(lme4)
library(lmerTest)
dat <- readRDS("data/ERM_data_abovegroundind.rds") %>% rename(AGB = above_biomass_g, hti = height_i_cm) %>%
drop_na("AGB", "hti", "p_level","f_level","block", "meso_num")
#### Ind biomass model ####
m1 <- lmer(log(AGB) ~ p_level*f_level + hti + (1|block), dat = dat)
anova(m1)
dat.pred <- dat %>% mutate(AGB_pred = exp(predict(m1)))
saveRDS(dat.pred, "data/ERM_data_abovegroundind_predicted.rds")
#### Group at mesocosm level ####
####### Join with metadata ######
meso.a <- readRDS("data/ERM_data_abovegroundmeso.rds") %>% select(-aboveBEF_biomass_g)
meso.a.pred <- dat.pred %>%
group_by(meso_num) %>%
summarise(aboveBEF_biomass_g = sum(AGB_pred)) %>%
left_join(meso.a, by = "meso_num")
saveRDS(meso.a.pred, "data/ERM_data_abovegroundmeso_predicted.rds")
library(lme4)
library(lmerTest)
library(MuMIn)
library(emmeans)
library(multcomp)
library(dplyr)
library(tibble)
library(stringr)
library(ggplot2)
library(svglite)
library(lme4)
library(lmerTest)
library(MuMIn)
library(emmeans)
library(multcomp)
library(dplyr)
library(tibble)
library(stringr)
library(ggplot2)
library(svglite)
### load data
ERM_data <- readRDS("data/ERM_data_abovegroundind.rds")
### only keep rows where f_level == 0 or 1
ERM_data <- ERM_data %>%
filter(f_level %in% c(0, 1))
### remove all rows where there is an NA in above_biomass_g
ERM_data <- ERM_data[!is.na(ERM_data$above_biomass_g),]
### remove unnecessary columns
ERM_data <- ERM_data %>% dplyr::select(-c("belowBEF_biomass_g", "height_f_cm", "dead"))
# sort data by plant species
ERM_data <- ERM_data[order(ERM_data$plant_sp), ]
# convert all columns except for biomass to a factor (so it's not a continuous variable where the mean is calculated afterwards)
ERM_data$meso_num <- as.factor(ERM_data$meso_num)
ERM_data$plant_id <- as.factor(ERM_data$plant_id)
ERM_data$plant_sp <- as.factor(ERM_data$plant_sp)
ERM_data$block <- as.factor(ERM_data$block)
ERM_data$p_level <- as.factor(ERM_data$p_level)
ERM_data$f_level <- as.factor(ERM_data$f_level)
# Ensure abvg_dry_biomass is numeric
ERM_data <- ERM_data %>%
mutate(above_biomass_g = as.numeric(above_biomass_g))
# Calculate mean for f_level == 0 per plant_sp and p_level
mean_df <- ERM_data %>%
filter(f_level == 0) %>%
group_by(plant_sp, p_level) %>%
summarise(mean_str = round(mean(above_biomass_g, na.rm = TRUE), 10), .groups = "drop")
# Merge the calculated means back to the original dataframe if needed
ERM_data <- ERM_data %>%
left_join(mean_df, by = c("plant_sp", "p_level"))
# exclude PJA p_level = 2 (because no data on PJA in f_level = 0 and p_level = 2 --> not possible to calculate MGR)
ERM_data <- ERM_data %>%
filter(mean_str != 0)
####### calculate response of each sample normalized to mean of the sterile samples for the same plant species at the same diversity level
ERM_data <- ERM_data %>%
mutate(
response = if_else(
f_level != 0 & !is.na(mean_str),
(above_biomass_g - mean_str) / mean_str,
NA_real_ # Assign NA for cases where f_level == 0 or mean_str is missing
)
)
saveRDS(ERM_data, file = "data/MGR_biomass_incl_fspecies_prep.rds")
###### load data
ERM_data <- readRDS("data/ERM_data_abovegroundind.rds")
###### remove all rows where there is an NA in above_biomass_g
ERM_data <- ERM_data[!is.na(ERM_data$above_biomass_g),]
###### remove unnecessary columns
ERM_data <- ERM_data %>% dplyr::select(-c("belowBEF_biomass_g", "height_f_cm", "dead"))
# sort data by plant species
ERM_data <- ERM_data[order(ERM_data$plant_sp), ]
# convert all columns except for biomass to a factor
ERM_data$meso_num <- as.factor(ERM_data$meso_num)
ERM_data$plant_id <- as.factor(ERM_data$plant_id)
ERM_data$plant_sp <- as.factor(ERM_data$plant_sp)
ERM_data$block <- as.factor(ERM_data$block)
ERM_data$p_level <- as.factor(ERM_data$p_level)
ERM_data$f_level <- as.factor(ERM_data$f_level)
# make sure abvg_dry_biomass is numeric
ERM_data <- ERM_data %>%
mutate(above_biomass_g = as.numeric(above_biomass_g))
# calculate mean for f_level == 0 per plant_sp and p_level
mean_df <- ERM_data %>%
filter(f_level == 0) %>%
group_by(plant_sp, p_level) %>%
summarise(mean_str = round(mean(above_biomass_g, na.rm = TRUE), 10), .groups = "drop")
# merge the calculated means back to the original dataframe if needed
ERM_data <- ERM_data %>%
left_join(mean_df, by = c("plant_sp", "p_level"))
# exclude PJA p_level = 2 (because no data on PJA in f_level = 0 and p_level = 2 --> not possible to calculate MGR)
ERM_data <- ERM_data %>%
filter(mean_str != 0)
####### calculate response of each sample normalized to mean of the sterile samples for the same plant species at the same diversity level
ERM_data <- ERM_data %>%
mutate(
response = if_else(
f_level != 0 & !is.na(mean_str),
(above_biomass_g - mean_str) / mean_str,
NA_real_ # Assign NA for cases where f_level == 0 or mean_str is missing
)
)
saveRDS(ERM_data, file = "data/MGR_biomass_prep.rds")
